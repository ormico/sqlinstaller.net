<?xml version="1.0" encoding="utf-8"?>
<ProviderFactory xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="ProviderFactory">
	<Providers>
		<Provider Name="Oracle" InvariantName="System.Data.OracleClient">
			<Scripts>
				<Script Type="Exists">SELECT COUNT(*) FROM all_users WHERE username = UPPER('{0}')</Script>
				<Script Type="Drop">DROP USER {0} CASCADE</Script>
				<Script Type="Create">BEGIN CREATE USER {0} IDENTIFIED EXTERNALLY; GRANT UNLIMITED TABLESPACE TO {0}; END;</Script>
				<Script Type="GetVersion">SELECT VERSION_INFO || ';' || UPGRADEBY FROM {0}.DB_VERSION</Script>
				<Script Type="SetVersion">CREATE OR REPLACE VIEW {0}.DB_VERSION AS SELECT '{1}' AS VERSION_INFO, '{2}' AS UPGRADEBY FROM DUAL</Script>
			</Scripts>
		</Provider>
		<Provider Name="PostGres" InvariantName="Npgsql">
			<Scripts>
				<Script Type="Exists">SELECT COUNT(*) FROM pg_catalog.pg_database WHERE datname = '{0}'</Script>
				<Script Type="Drop">DROP DATABASE {0}</Script>
				<Script Type="Create">CREATE DATABASE {0}</Script>
				<Script Type="GetVersion">SELECT version_info FROM db_version</Script>
				<Script Type="SetVersion">CREATE OR REPLACE VIEW db_version AS SELECT CAST('{1};{2}' AS VARCHAR(512)) AS version_info</Script>
			</Scripts>
		</Provider>
		<Provider Name="SqlServer" InvariantName="System.Data.SqlClient">
			<Scripts>
				<Script Type="Exists">SELECT COUNT(*) FROM sysdatabases WHERE '[' + name + ']' = QUOTENAME('{0}')</Script>
				<Script Type="Drop">ALTER DATABASE [{0}] SET SINGLE_USER WITH ROLLBACK IMMEDIATE; DROP DATABASE [{0}];</Script>
				<Script Type="Create">
					USE master
					GO
					DECLARE @data_path nvarchar(512);
					SET @data_path = (SELECT SUBSTRING(physical_name, 1, CHARINDEX(N'master.mdf', LOWER(physical_name)) - 1)
					FROM master.sys.master_files
					WHERE database_id = 1 AND file_id = 1);
					-- Create database
					EXECUTE( 'CREATE DATABASE [{0}] ON  PRIMARY
					( NAME = {0}, FILENAME = ''' + @data_path + '{0}.mdf'' , SIZE = 3072KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
					LOG ON
					( NAME = {0}_log, FILENAME = ''' + @data_path + '{0}_log.ldf'' , SIZE = 1024KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)'
					)
					GO
				</Script>
				<Script Type="GetVersion">
					SELECT CAST(ISNULL(V.value,'') AS VARCHAR(255)) + ';' + CAST(ISNULL(U.value,'') AS VARCHAR(1024))
					FROM fn_listextendedproperty('Version', default, default, default, default, default, default) V,
					fn_listextendedproperty('UpdatedBy', default, default, default, default, default, default) U
				</Script>
				<Script Type="SetVersion">
					IF NOT EXISTS (SELECT value FROM fn_listextendedproperty('Version', default, default, default, default, default, default))
					EXEC sp_addextendedproperty 'Version', '{1}'
					ELSE
					EXEC sp_updateextendedproperty 'Version', '{1}'
					IF NOT EXISTS (SELECT value FROM fn_listextendedproperty('UpdatedBy', default, default, default, default, default, default))
					EXEC sp_addextendedproperty 'UpdatedBy', '{2}'
					ELSE
					EXEC sp_updateextendedproperty 'UpdatedBy', '{2}'
				</Script>
			</Scripts>
		</Provider>
	</Providers>
</ProviderFactory>